# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usb_storage" "sd_mod" "rtsx_usb_sdmmc" ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  boot.initrd.luks.devices = {
    root = {
      device = "/dev/disk/by-uuid/26ff9e90-2caf-48d0-8e46-7e1e126d3ccc";
      preLVM = true;
      allowDiscards = true;
    };
    data = {
      device = "/dev/disk/by-uuid/83608b5d-0f8a-4b62-80ef-2da1bd5af3a8";
      allowDiscards = true;
    };
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/0c35b082-6a3a-40a5-b8f8-f7b3185a9ed9";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/b6c27751-87a4-4986-9d02-1d20ba173f9a";
      fsType = "btrfs";
      options = [ "subvol=@home" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/0c35b082-6a3a-40a5-b8f8-f7b3185a9ed9";
      fsType = "btrfs";
      options = [ "subvol=@nix" ];
    };

  fileSystems."/.snapshots" =
    { device = "/dev/disk/by-uuid/b6c27751-87a4-4986-9d02-1d20ba173f9a";
      fsType = "btrfs";
      options = [ "subvol=@snapshots" ];
    };

  fileSystems."/btrfs/root" =
    { device = "/dev/disk/by-uuid/0c35b082-6a3a-40a5-b8f8-f7b3185a9ed9";
      fsType = "btrfs";
    };

  fileSystems."/btrfs/data" =
    { device = "/dev/disk/by-uuid/b6c27751-87a4-4986-9d02-1d20ba173f9a";
      fsType = "btrfs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/C1E6-5648";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/26e1ad6b-9a50-4b1d-83c1-9b2418fa1e03"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
